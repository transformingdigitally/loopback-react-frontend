{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ujjwal\\\\New\\\\loopback-project\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/esm/Table\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function authHeader() {\n  // return authorization header with basic auth credentials\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.authdata) {\n    return {\n      Authorization: \"Basic \" + user.authdata\n    };\n  } else {\n    return {};\n  }\n}\nexport function Home() {\n  _s();\n\n  const [posts, setPosts] = useState({\n    users: []\n  }); // useEffect(() => {\n  //   const fetchDataLists = async () => {\n  //     const { data } = await axios(\n  //       \"https://jsonplaceholder.typicode.com/posts\",\n  //     );\n  //     setPosts({ blogs: data });\n  //     console.log(data);\n  //   };\n  //   fetchDataLists();\n  // }, [setPosts]);\n\n  let users = [];\n  useEffect(() => {\n    const url = \"http://127.0.0.1:3000/users\";\n    const requestOptions = {\n      method: \"GET\",\n      headers: authHeader() //   body: JSON.stringify({ name, email, role, password }),\n\n    };\n    fetch(url, requestOptions).then(response => response.json().then(data => ({\n      status: response.status,\n      body: data\n    }))).then(response => {\n      if (response.status === \"200\" || response.status === 200) {\n        toast(\"Sign In Successfully\");\n        setPosts({\n          users: response.body\n        });\n      } else if (response.status === 400) {\n        console.log(\"Bad REquest\");\n      } else {}\n    }).catch(error => console.log(\"Form submit error\", error));\n  }, [setPosts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"text-danger\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Role 0 Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), posts.users.map(user => /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"cKCr6pJ1Ono/NSuBFOAHK4+TGa8=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Ujjwal/New/loopback-project/src/components/Home.js"],"names":["axios","React","useEffect","useState","Table","ToastContainer","toast","authHeader","user","JSON","parse","localStorage","getItem","authdata","Authorization","Home","posts","setPosts","users","url","requestOptions","method","headers","fetch","then","response","json","data","status","body","console","log","catch","error","textAlign","map","id","name","email","role"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/esm/Table\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nexport function authHeader() {\r\n  // return authorization header with basic auth credentials\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.authdata) {\r\n    return { Authorization: \"Basic \" + user.authdata };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\nexport function Home() {\r\n  const [posts, setPosts] = useState({ users: [] });\r\n\r\n  // useEffect(() => {\r\n  //   const fetchDataLists = async () => {\r\n  //     const { data } = await axios(\r\n  //       \"https://jsonplaceholder.typicode.com/posts\",\r\n  //     );\r\n  //     setPosts({ blogs: data });\r\n  //     console.log(data);\r\n  //   };\r\n  //   fetchDataLists();\r\n  // }, [setPosts]);\r\nlet users=[];\r\n  useEffect(() => {\r\n    const url = \"http://127.0.0.1:3000/users\";\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: authHeader(), //   body: JSON.stringify({ name, email, role, password }),\r\n    };\r\n    fetch(url, requestOptions)\r\n\r\n    .then((response) =>\r\n    response\r\n      .json()\r\n      .then((data) => ({ status: response.status, body: data })),\r\n  )\r\n  .then((response) => {\r\n    if (response.status === \"200\" || response.status === 200) {\r\n      toast(\"Sign In Successfully\");\r\n\r\n      setPosts({ users: response.body });\r\n    } else if (response.status === 400) {\r\n      console.log(\"Bad REquest\");\r\n    } else {\r\n    }\r\n  })\r\n  .catch((error) => console.log(\"Form submit error\", error));\r\n  }, [setPosts]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 class=\"text-danger\" style={{ textAlign: \"center\" }}>\r\n        Role 0 Homepage\r\n      </h1>\r\n      <div>\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Serial No.</th>\r\n              <th>Users</th>\r\n              <th>Email</th>\r\n              <th>Role</th>\r\n            </tr>\r\n          </thead>\r\n          {posts.users.map((user) => (\r\n            <tbody>\r\n              <tr>\r\n                <td>{user.id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.role}</td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </Table>\r\n      </div>\r\n      <ToastContainer autoClose={5000}  />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}